<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neusoft.dao.DeliveryAddressMapper">
  <resultMap id="BaseResultMap" type="com.neusoft.po.DeliveryAddress">
    <id column="daId" jdbcType="INTEGER" property="daid" />
    <result column="contactName" jdbcType="VARCHAR" property="contactname" />
    <result column="contactSex" jdbcType="INTEGER" property="contactsex" />
    <result column="contactTel" jdbcType="VARCHAR" property="contacttel" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="userid" jdbcType="VARCHAR" property="userid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    daId, contactName, contactSex, contactTel, address, userid
  </sql>
  <select id="selectByExample" parameterType="com.neusoft.po.DeliveryAddressExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from deliveryaddress
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from deliveryaddress
    where daId = #{daid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from deliveryaddress
    where daId = #{daid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.neusoft.po.DeliveryAddressExample">
    delete from deliveryaddress
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.neusoft.po.DeliveryAddress">
    insert into deliveryaddress (daId, contactName, contactSex, 
      contactTel, address, userid
      )
    values (#{daid,jdbcType=INTEGER}, #{contactname,jdbcType=VARCHAR}, #{contactsex,jdbcType=INTEGER}, 
      #{contacttel,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{userid,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.neusoft.po.DeliveryAddress">
    insert into deliveryaddress
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="daid != null">
        daId,
      </if>
      <if test="contactname != null">
        contactName,
      </if>
      <if test="contactsex != null">
        contactSex,
      </if>
      <if test="contacttel != null">
        contactTel,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="userid != null">
        userid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="daid != null">
        #{daid,jdbcType=INTEGER},
      </if>
      <if test="contactname != null">
        #{contactname,jdbcType=VARCHAR},
      </if>
      <if test="contactsex != null">
        #{contactsex,jdbcType=INTEGER},
      </if>
      <if test="contacttel != null">
        #{contacttel,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.neusoft.po.DeliveryAddressExample" resultType="java.lang.Long">
    select count(*) from deliveryaddress
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update deliveryaddress
    <set>
      <if test="row.daid != null">
        daId = #{row.daid,jdbcType=INTEGER},
      </if>
      <if test="row.contactname != null">
        contactName = #{row.contactname,jdbcType=VARCHAR},
      </if>
      <if test="row.contactsex != null">
        contactSex = #{row.contactsex,jdbcType=INTEGER},
      </if>
      <if test="row.contacttel != null">
        contactTel = #{row.contacttel,jdbcType=VARCHAR},
      </if>
      <if test="row.address != null">
        address = #{row.address,jdbcType=VARCHAR},
      </if>
      <if test="row.userid != null">
        userid = #{row.userid,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update deliveryaddress
    set daId = #{row.daid,jdbcType=INTEGER},
      contactName = #{row.contactname,jdbcType=VARCHAR},
      contactSex = #{row.contactsex,jdbcType=INTEGER},
      contactTel = #{row.contacttel,jdbcType=VARCHAR},
      address = #{row.address,jdbcType=VARCHAR},
      userid = #{row.userid,jdbcType=VARCHAR}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.neusoft.po.DeliveryAddress">
    update deliveryaddress
    <set>
      <if test="contactname != null">
        contactName = #{contactname,jdbcType=VARCHAR},
      </if>
      <if test="contactsex != null">
        contactSex = #{contactsex,jdbcType=INTEGER},
      </if>
      <if test="contacttel != null">
        contactTel = #{contacttel,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="userid != null">
        userid = #{userid,jdbcType=VARCHAR},
      </if>
    </set>
    where daId = #{daid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neusoft.po.DeliveryAddress">
    update deliveryaddress
    set contactName = #{contactname,jdbcType=VARCHAR},
      contactSex = #{contactsex,jdbcType=INTEGER},
      contactTel = #{contacttel,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      userid = #{userid,jdbcType=VARCHAR}
    where daId = #{daid,jdbcType=INTEGER}
  </update>


<!--  查询全表信息的方法-->
  <select id="selectAll" resultType="com.neusoft.po.DeliveryAddress" resultMap="BaseResultMap">
    select * from deliveryaddress

  </select>

<!--  两表连接通过用户id查询两表信息-->
  <select id="selectByPrimaryKeyWithUser" parameterType="java.lang.String" resultMap="BaseResultMapWithUser">
    select *
    from deliveryaddress as d
    left join elmeuser as e on d.userid=e.userId
    where d.userid = #{userid,jdbcType=VARCHAR}
  </select>

  <resultMap id="BaseResultMapWithUser" type="com.neusoft.po.DeliveryAddress">
    <id column="daId" jdbcType="INTEGER" property="daid" />
    <result column="contactName" jdbcType="VARCHAR" property="contactname" />
    <result column="contactSex" jdbcType="INTEGER" property="contactsex" />
    <result column="contactTel" jdbcType="VARCHAR" property="contacttel" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="userid" jdbcType="VARCHAR" property="userid" />
   <collection property="elmeuserList" ofType="com.neusoft.po.Elmeuser">
     <id column="userId" jdbcType="VARCHAR" property="userid" />
     <result column="psd" jdbcType="VARCHAR" property="psd" />
     <result column="userName" jdbcType="INTEGER" property="username" />
     <result column="userSex" jdbcType="VARCHAR" property="usersex" />
     <result column="userImg" jdbcType="VARCHAR" property="userimg" />
     <result column="delTag" jdbcType="VARCHAR" property="deltag" />
   </collection>

<!--    <association property="elmeuser" javaType="com.neusoft.po.Elmeuser">-->
<!--      <id column="userId" jdbcType="VARCHAR" property="userId" />-->
<!--      <result column="psd" jdbcType="VARCHAR" property="psd" />-->
<!--      <result column="userName" jdbcType="INTEGER" property="userName" />-->
<!--      <result column="userSex" jdbcType="VARCHAR" property="userSex" />-->
<!--      <result column="userImg" jdbcType="VARCHAR" property="userImg" />-->
<!--      <result column="delTag" jdbcType="VARCHAR" property="delTag" />-->
<!--    </association>-->
  </resultMap>

  <!--    通过用户Id删除信息-->
  <delete id="delInfoByExample" parameterType="java.lang.String">
    delete from deliveryaddress
    where userid = #{userid,jdbcType=VARCHAR}
  </delete>

<!--  通过用户名查询信息-->
  <select id="selectByUsername" resultType="com.neusoft.po.DeliveryAddress" resultMap="BaseResultMap">
    select * from deliveryaddress
    where contactname = #{contactname,jdbcType=VARCHAR}

  </select>

  <!--  通过手机号查询信息-->
  <select id="selectByUserTel" resultType="com.neusoft.po.DeliveryAddress" resultMap="BaseResultMap">
    select * from deliveryaddress
    where contactTel = #{contactTel,jdbcType=VARCHAR}

  </select>

  <!--  通过手机号查询信息-->
  <select id="selectByAddress" resultType="com.neusoft.po.DeliveryAddress" resultMap="BaseResultMap">
    select * from deliveryaddress
    where contactTel = #{contactTel,jdbcType=VARCHAR}
  </select>

<!--  通过地址信息模糊查询-->
  <select id="selectLikeAddress" resultType="com.neusoft.po.DeliveryAddress" resultMap="BaseResultMap">
    select * from deliveryaddress
    where address like "%" #{address} "%"
  </select>

</mapper>